// Automatically generated file. Edit README.txt and run 
// 'make usage' to update this documentation!

const char* usage_str = ""
"NAME\r\n"
"\r\n"
"    ph.exe - a shell protocol handler to run external programs\r\n"
"\r\n"
"\r\n"
"SYNOPSIS\r\n"
"\r\n"
"    ph.exe <url> [config_file]\r\n"
"    ph.exe -e <config_file> [out_file]\r\n"
"    ph.exe -r </regex/replace/> <file>\r\n"
"\r\n"
"\r\n"
"DESCRIPTION\r\n"
"\r\n"
"    ph.exe can be registered as protocol handler by shels that support \r\n"
"    global custom protocol handlers. The program will expect a complete url as \r\n"
"    first parameter. The authority and path parameter parts of the url are then\r\n"
"    used to look up a section in the configuration file which holds \r\n"
"    instructions what needs to be executed. The config file is written i nthe \r\n"
"    form of an ini file or it an be compiled into an encoded file to hide \r\n"
"    sensitive information such as passwords.\r\n"
"    \r\n"
"    Once the program is registered to handle a specific protocol sheme, it must \r\n"
"    be called by the shell with the full url as first parameter. As an example\r\n"
"    (assuming the program is registered with the protocol scheme `proto:`):\r\n"
"    \r\n"
"        proto://authority/path/dir?param1=value1\r\n"
"    \r\n"
"    can be mapped to run the following program:\r\n"
"        \r\n"
"        some_executable.exe --file=\"${param1}\"\r\n"
"    \r\n"
"    where `${param1}` will b substitued by the value of the query parameter \r\n"
"    `value1`.\r\n"
"    \r\n"
"    The mapping is done throug the `ph.ini` file. Detailed information\r\n"
"    on how to use the configuration file can be found in INSTALL.txt.\r\n"
"    \r\n"
"    But in short, the following configuration would be needed to make the above\r\n"
"    example work:\r\n"
"    \r\n"
"        [authority/path/dir] ; this is the mapping to the url\r\n"
"        cmd = some_executable.exe --file=\"${param1}\"\r\n"
"\r\n"
"    Registering a protocol scheme can be donw trough a registry setting on \r\n"
"    windows. An example registrz file should come with this program if not \r\n"
"	run it in a folder without a configuration file and it will be created.\r\n"
"\r\n"
"\r\n"
"OPTIONS\r\n"
"\r\n"
"    -e encode a plain text ini config file. the resulting file will be stored\r\n"
"       in the same folder bit with a file extension of `.dat`. Mone information\r\n"
"       the usage of this option can be found in INSTALL.txt\r\n"
"    \r\n"
"    -r /regex/replace/ will test the build in regex replace mechanism. Mone \r\n"
"       information the usage of this option can be found in INSTALL.txt\r\n"
"\r\n"
"\r\n"
"ENVIRONMENT\r\n"
"\r\n"
"    PH_HOME  is set upon startup of the program in it's own process and will \r\n"
"             point to the folder of the executable. This variable can be used \r\n"
"             in the configuration file to point to the application directory.\r\n"
"\r\n"
"\r\n"
"FILES\r\n"
"\r\n"
"    $PH_HOME/ph.ini      The default location of the configration file. If the \r\n"
"                         2nd argument is not provided, `ph.exe`\r\n"
"                         will search for the configuration file here.\r\n"
"\r\n"
"    $PH_HOME/ph.dat      The default location of the encoded configration file.\r\n"
"                         To encode an `.ini` file into a `.dat` file see \r\n"
"                         the `-e` command line switch.\r\n"
"\r\n"
"    $PH_HOME/ph.log      Logfile f the program.\r\n"
"\r\n"
"    $PH_HOME/error.html  Error messages displayed in a browser when the \r\n"
"                         program encounters a problem.\r\n"
"\r\n"
"\r\n"
"LIMITATIONS\r\n"
"\r\n"
"    1. The maximung length of a command (with all it's parameters) is limited \r\n"
"       to 260 bytes.\r\n"
"\r\n"
"    2. the authority and path part in the URI are restricted to the following \r\n"
"       characters as per rfc3986: [a-zA-Z0-9-._~] and in the path part \r\n"
"       additionally '/' is allowed.\r\n"
"\r\n"
"    3. url parts are matched with the ini section case sesitive. if you call\r\n"
"       protohand://document/myapp but your section in the ini is called \r\n"
"       [document/MyApp], the section will not be found.\r\n"
"\r\n"
"    4. Fully qualified path's to executables must be used in the the ini file's \r\n"
"       `exe` directive. You might get lucky by using relative paths, but this \r\n"
"       can be a security concern.\r\n"
"\r\n"
"    5. It is unclear how this program will behave on multibyte character sets \r\n"
"       coming from user input. It will probably crash and burn your computer \r\n"
"       and desk down. Huzzah!\r\n"
"\r\n"
"\r\n"
"COPYRIGHT\r\n"
"\r\n"
"    2017, Simon Wunderlin (BSD license)\r\n"
"	2009, Ben Hoyt - Ini parser, https://github.com/benhoyt/inih (BSD license)\r\n"
"	\r\n"
"    Regular expression support is provided by the PCRE library package,\r\n"
"    which is open source software, written by Philip Hazel, and copyright\r\n"
"    by the University of Cambridge, England.\r\n"
"\r\n"
"\r\n"
"SEE ALSO\r\n"
"\r\n"
"    INSTALL.txt        for installation and configuration instructions.\r\n"
"    BUILD.txt          for instructions on building for Windows, OSX and Linux\r\n"
"    LICENSE.txt        BSD License\r\n"
"    ph.reg             Example registry file\r\n"
"";
