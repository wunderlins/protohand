;; NOTE: do not quote values

;; this is the global configuration. you may use environment variables in paths
[_global]
;log_path = ${env.APPDATA}\ph.log
log_level = 5
;max_log_size_bytes = 10240000
;prefix_help = ${env.windir}\cmd.exe /c hh.exe -800
;prefix_cmd = ${env.windir}\cmd.exe /c

[ph.ini]
cmd = C:\Windows\notepad.exe /A "${env.PH_HOME}\ph.ini"

[exe/testcmd]
; minimal example of running a test executable with no parameters from the uri
; ph.exe "ph://exe/testcmd"
; result: 'C:\Users\wus\Projects\protohand\testcmd.exe'
cmd = "${env.PH_HOME}\testcmd.exe"

[exe/notepad]
; an example how to provide static command line parameters, try it by running:
; protohand.exe "ph://exe/notepad"
; result: 'c:\windows\notepad.exe c:\windows\CSUP.txt'
cmd = "${env.windir}\notepad.exe c:\windows\CSUP.txt"

[exe/notepad2]
; an example how to execute an application and open a document.
; The filename is passed in by query string. 
; ph.exe "ph://exe/notepad2?file=CSUP.txt"
; result: 'c:\windows\notepad.exe c:\windows\CSUP.txt'
cmd = "${env.windir}\notepad.exe c:\windows\${file}"

[exe/testcmd/configreplace]
; an example showing how to replace values in a config file before running 
; the executable. The cfg_regreplace option takes a PCRE regular expression.
; ph.exe "ph://exe/testcmd/configreplace"
; result: 'C:\Users\wus\Projects\protohand\testcmd.exe'
cmd = ${env.PH_HOME}\testcmd.exe
cfg_file = ${env.PH_HOME}\testcfg.txt
cfg_regreplace = /(a)+/$1--/

[exe/ie]
; launch internet explorer with an url provided in the query string:
; ph.exe "ph://exe/ie?url=http://www.google.com"
; result: '"C:\Program Files (x86)\Internet Explorer\iexplore.exe" "http://www.google.com"'
cmd = "C:\Program Files (x86)\Internet Explorer\iexplore.exe" "${url}"

[exe/dfrgui]
; minimalistic config, just run a program
; ph.exe "ph://exe/dfrgui"
; FIXME: dfrgui.exe will not be launched, path is correct, permissions too (at home, W10)
cmd = C:\Windows\System32\dfrgui.exe
